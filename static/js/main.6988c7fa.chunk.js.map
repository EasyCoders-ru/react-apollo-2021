{"version":3,"sources":["routes/Details.js","components/Movie.js","routes/Home.js","components/App.js","apollo.js","index.js"],"names":["GET_MOVIE","gql","Container","styled","div","Column","Poster","props","bg","Title","h1","Subtitle","h4","Description","p","id","useParams","useQuery","variables","loading","data","movie","title","isLiked","language","rating","description_intro","medium_cover_image","LIKE_MOVIE","useMutation","parseInt","toogleLikeMovie","to","onClick","GET_MOVIES","Header","header","h3","Loading","Movies","movies","map","m","Movie","App","exact","path","component","Home","Details","client","ApolloClient","uri","cache","InMemoryCache","resolvers","Mutation","toggleLikeMovie","_","modify","fields","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAIMA,EAAYC,cAAH,mSAkBTC,EAAYC,IAAOC,IAAV,2NAUTC,EAASF,IAAOC,IAAV,iEAKNE,EAASH,IAAOC,IAAV,8LACc,SAACG,GAAD,OAAWA,EAAMC,MAQrCC,EAAQN,IAAOO,GAAV,wEAILC,EAAWR,IAAOS,GAAV,wEAIRC,EAAcV,IAAOW,EAAV,gDAIF,aAAO,IAAD,YACXC,EAAOC,cAAPD,GADW,EAEOE,mBAASjB,EAAW,CAC5CkB,UAAW,CAAEH,QADPI,EAFW,EAEXA,QAASC,EAFE,EAEFA,KAGjB,OACE,eAAClB,EAAD,WACE,eAACG,EAAD,WACE,cAACI,EAAD,UACGU,EACG,sDADI,iBAEDC,QAFC,IAEDA,GAFC,UAEDA,EAAMC,aAFL,aAED,EAAaC,MAFZ,aAEyB,OAAJF,QAAI,IAAJA,GAAA,UAAAA,EAAMC,aAAN,eAAaE,SAAU,eAAO,eAFnD,OAIV,eAACZ,EAAD,kBACGS,QADH,IACGA,GADH,UACGA,EAAMC,aADT,aACG,EAAaG,SADhB,gBAC6BJ,QAD7B,IAC6BA,GAD7B,UAC6BA,EAAMC,aADnC,aAC6B,EAAaI,UAE1C,cAACZ,EAAD,iBAAcO,QAAd,IAAcA,GAAd,UAAcA,EAAMC,aAApB,aAAc,EAAaK,uBAE7B,cAACpB,EAAD,CAAQE,GAAE,OAAEY,QAAF,IAAEA,GAAF,UAAEA,EAAMC,aAAR,aAAE,EAAaM,yB,gBCvEzBC,EAAa3B,YAAH,uJAMVC,EAAYC,IAAOC,IAAV,kKAMTE,EAASH,IAAOC,IAAV,8JACc,SAACG,GAAD,OAAWA,EAAMC,MAO5B,cAA0B,IAAvBO,EAAsB,EAAtBA,GAAIP,EAAkB,EAAlBA,GAAIe,EAAc,EAAdA,QAAc,EACZM,sBAAYD,EAAY,CAChDV,UAAW,CAAEH,GAAIe,SAASf,GAAKQ,aAD1BQ,EAD+B,oBAItC,OACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAMC,GAAE,WAAMjB,GAAd,SACE,cAAC,EAAD,CAAQP,GAAIA,MAEd,wBAAQyB,QAASF,EAAjB,SACGR,EAAU,gEAAgB,2EC/B7BW,EAAajC,cAAH,4HAUVC,EAAYC,IAAOC,IAAV,iHAOT+B,EAAShC,IAAOiC,OAAV,+OAWN3B,EAAQN,IAAOO,GAAV,6FAMLC,EAAWR,IAAOkC,GAAV,gDAIRC,EAAUnC,IAAOC,IAAV,2GAOPmC,EAASpC,IAAOC,IAAV,gKASG,aAAO,IAAD,EACOa,mBAASiB,GAA3Bf,EADW,EACXA,QAASC,EADE,EACFA,KACjB,OACE,eAAC,EAAD,WACE,eAACe,EAAD,WACE,cAAC,EAAD,0BACA,cAAC,EAAD,yHAEDhB,GAAW,cAACmB,EAAD,mEACVnB,IAAD,OAAYC,QAAZ,IAAYA,OAAZ,EAAYA,EAAMoB,SACjB,cAACD,EAAD,UACGnB,EAAKoB,OAAOC,KAAI,SAACC,GAAD,OACf,cAACC,EAAD,CAEE5B,GAAI2B,EAAE3B,GACNP,GAAIkC,EAAEf,mBACNJ,QAASmB,EAAEnB,SAHNmB,EAAE3B,aC1DN6B,MATf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOF,KAAK,OAAOC,UAAWE,QCcrBC,EApBA,IAAIC,eAAa,CAC9BC,IAAK,2CACLC,MAAO,IAAIC,gBACXC,UAAW,CACTZ,MAAO,CACLpB,QAAS,kBAAM,IAEjBiC,SAAU,CACRC,gBAAiB,SAACC,EAAD,KAAoC,IAA9B3C,EAA6B,EAA7BA,GAA6B,EAAzBQ,QAAyB,EAAZ8B,MAChCM,OAAO,CACX5C,GAAG,SAAD,OAAWA,GACb6C,OAAQ,CACNrC,QAAS,SAACA,GAAD,OAAcA,WCRnCsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,iBAAD,CAAgBb,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJc,SAASC,eAAe,W","file":"static/js/main.6988c7fa.chunk.js","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\n\nconst GET_MOVIE = gql`\n  query getMovie($id: Int!) {\n    movie(id: $id) {\n      id\n      title\n      medium_cover_image\n      description_intro\n      rating\n      language\n      isLiked @client\n    }\n    suggestions(id: $id) {\n      id\n      medium_cover_image\n    }\n  }\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: white;\n`;\n\nconst Column = styled.div`\n  margin-left: 10px;\n  width: 50%;\n`;\n\nconst Poster = styled.div`\n  background-image: url(${(props) => props.bg});\n  background-size: cover;\n  background-position: center center;\n  width: 25%;\n  height: 60%;\n  background-color: transparent;\n`;\n\nconst Title = styled.h1`\n  font-size: 65px;\n  margin-bottom: 15px;\n`;\nconst Subtitle = styled.h4`\n  font-size: 35px;\n  margin-bottom: 10px;\n`;\nconst Description = styled.p`\n  font-size: 28px;\n`;\n\nexport default () => {\n  const { id } = useParams();\n  const { loading, data } = useQuery(GET_MOVIE, {\n    variables: { id },\n  });\n  return (\n    <Container>\n      <Column>\n        <Title>\n          {loading\n            ? \"–ó–∞–≥—Ä—É–∑–∫–∞...\"\n            : `${data?.movie?.title} ${data?.movie?.isLiked ? \"‚ù§Ô∏è\" : \"üò•\"} `}\n        </Title>\n        <Subtitle>\n          {data?.movie?.language} ¬∑ {data?.movie?.rating}\n        </Subtitle>\n        <Description>{data?.movie?.description_intro}</Description>\n      </Column>\n      <Poster bg={data?.movie?.medium_cover_image}></Poster>\n    </Container>\n  );\n};\n","import { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst LIKE_MOVIE = gql`\n  mutation toggleLikeMovie($id: Int!, $isLiked: Boolean!) {\n    toggleLikeMovie(id: $id, isLiked: $isLiked) @client\n  }\n`;\n\nconst Container = styled.div`\n  height: 380px;\n  width: 100%;\n  border-radius: 7px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n`;\nconst Poster = styled.div`\n  background-image: url(${(props) => props.bg});\n  height: 100%;\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n`;\n\nexport default ({ id, bg, isLiked }) => {\n  const [toogleLikeMovie] = useMutation(LIKE_MOVIE, {\n    variables: { id: parseInt(id), isLiked },\n  });\n  return (\n    <Container>\n      <Link to={`/${id}`}>\n        <Poster bg={bg} />\n      </Link>\n      <button onClick={toogleLikeMovie}>\n        {isLiked ? \"–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è\" : \"–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å\"}\n      </button>\n    </Container>\n  );\n};\n","import { gql, useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport Movie from \"../components/Movie\";\n\nconst GET_MOVIES = gql`\n  query {\n    movies {\n      id\n      medium_cover_image\n      isLiked @client\n    }\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Header = styled.header`\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  height: 45vh;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  font-size: 60px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst Subtitle = styled.h3`\n  font-size: 35px;\n`;\n\nconst Loading = styled.div`\n  font-size: 18px;\n  opacity: 0.5;\n  font-weight: 500;\n  margin-top: 10px;\n`;\n\nconst Movies = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 25px;\n  width: 60%;\n  position: relative;\n  top: -50px;\n`;\n\nexport default () => {\n  const { loading, data } = useQuery(GET_MOVIES);\n  return (\n    <Container>\n      <Header>\n        <Title>Apollo 2021</Title>\n        <Subtitle>–ë–∞–∑–∞ —Ñ–∏–ª—å–º–æ–≤ –Ω–∞ React, Apollo, GraphQL</Subtitle>\n      </Header>\n      {loading && <Loading>–ó–∞–≥—Ä—É–∑–∫–∞...</Loading>}\n      {!loading && data?.movies && (\n        <Movies>\n          {data.movies.map((m) => (\n            <Movie\n              key={m.id}\n              id={m.id}\n              bg={m.medium_cover_image}\n              isLiked={m.isLiked}\n            />\n          ))}\n        </Movies>\n      )}\n    </Container>\n  );\n};\n","import { HashRouter as Router, Route } from \"react-router-dom\";\nimport Details from \"../routes/Details\";\nimport Home from \"../routes/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/:id\" component={Details} />\n    </Router>\n  );\n}\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"https://easycoders-movies.herokuapp.com/\",\n  cache: new InMemoryCache(),\n  resolvers: {\n    Movie: {\n      isLiked: () => false,\n    },\n    Mutation: {\n      toggleLikeMovie: (_, { id, isLiked }, { cache }) => {\n        cache.modify({\n          id: `Movie:${id}`,\n          fields: {\n            isLiked: (isLiked) => !isLiked,\n          },\n        });\n      },\n    },\n  },\n});\n\nexport default client;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport client from \"./apollo\";\nimport { ApolloProvider } from \"@apollo/client\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}