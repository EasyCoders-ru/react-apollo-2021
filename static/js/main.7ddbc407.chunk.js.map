{"version":3,"sources":["routes/Details.js","components/Movie.js","routes/Home.js","components/App.js","apollo.js","index.js"],"names":["GET_MOVIE","gql","Container","styled","div","Column","Poster","props","bg","Title","h1","Subtitle","h4","Description","p","id","useParams","useQuery","variables","loading","data","movie","title","language","rating","description_intro","medium_cover_image","to","GET_MOVIES","Header","header","h3","Loading","Movies","movies","map","m","Movie","App","exact","path","component","Home","Details","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAIMA,EAAYC,cAAH,kQAgBTC,EAAYC,IAAOC,IAAV,2NAUTC,EAASF,IAAOC,IAAV,iEAKNE,EAASH,IAAOC,IAAV,8LACc,SAACG,GAAD,OAAWA,EAAMC,MAQrCC,EAAQN,IAAOO,GAAV,wEAILC,EAAWR,IAAOS,GAAV,wEAIRC,EAAcV,IAAOW,EAAV,gDAIF,aAAO,IAAD,UACXC,EAAOC,cAAPD,GADW,EAEOE,mBAASjB,EAAW,CAC5CkB,UAAW,CAAEH,QADPI,EAFW,EAEXA,QAASC,EAFE,EAEFA,KAGjB,OACE,eAAClB,EAAD,WACE,eAACG,EAAD,WACE,cAACI,EAAD,UAAQU,EAAU,sDAAH,OAAmBC,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAMC,aAAzB,aAAmB,EAAaC,QAC/C,eAACX,EAAD,kBACGS,QADH,IACGA,GADH,UACGA,EAAMC,aADT,aACG,EAAaE,SADhB,gBAC6BH,QAD7B,IAC6BA,GAD7B,UAC6BA,EAAMC,aADnC,aAC6B,EAAaG,UAE1C,cAACX,EAAD,iBAAcO,QAAd,IAAcA,GAAd,UAAcA,EAAMC,aAApB,aAAc,EAAaI,uBAE7B,cAACnB,EAAD,CAAQE,GAAE,OAAEY,QAAF,IAAEA,GAAF,UAAEA,EAAMC,aAAR,aAAE,EAAaK,yBCnEzBxB,EAAYC,IAAOC,IAAV,uLAOTE,EAASH,IAAOC,IAAV,8JACc,SAACG,GAAD,OAAWA,EAAMC,MAO5B,kBAAGO,EAAH,EAAGA,GAAIP,EAAP,EAAOA,GAAP,OACb,cAAC,EAAD,UACE,cAAC,IAAD,CAAMmB,GAAE,WAAMZ,GAAd,SACE,cAAC,EAAD,CAAQP,GAAIA,SCjBZoB,EAAa3B,cAAH,qGASVC,EAAYC,IAAOC,IAAV,iHAOTyB,EAAS1B,IAAO2B,OAAV,+OAWNrB,EAAQN,IAAOO,GAAV,6FAMLC,EAAWR,IAAO4B,GAAV,gDAIRC,EAAU7B,IAAOC,IAAV,2GAOP6B,EAAS9B,IAAOC,IAAV,gKASG,aAAO,IAAD,EACOa,mBAASW,GAA3BT,EADW,EACXA,QAASC,EADE,EACFA,KACjB,OACE,eAAC,EAAD,WACE,eAACS,EAAD,WACE,cAAC,EAAD,0BACA,cAAC,EAAD,yHAEDV,GAAW,cAACa,EAAD,mEACVb,IAAD,OAAYC,QAAZ,IAAYA,OAAZ,EAAYA,EAAMc,SACjB,cAACD,EAAD,UACGb,EAAKc,OAAOC,KAAI,SAACC,GAAD,OACf,cAACC,EAAD,CAAkBtB,GAAIqB,EAAErB,GAAIP,GAAI4B,EAAEV,oBAAtBU,EAAErB,aCxDXuB,MATf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOF,KAAK,OAAOC,UAAWE,QCDrBC,EALA,IAAIC,eAAa,CAC9BC,IAAK,2CACLC,MAAO,IAAIC,kBCEbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,iBAAD,CAAgBP,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.7ddbc407.chunk.js","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\n\nconst GET_MOVIE = gql`\n  query getMovie($id: Int!) {\n    movie(id: $id) {\n      title\n      medium_cover_image\n      description_intro\n      rating\n      language\n    }\n    suggestions(id: $id) {\n      id\n      medium_cover_image\n    }\n  }\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: white;\n`;\n\nconst Column = styled.div`\n  margin-left: 10px;\n  width: 50%;\n`;\n\nconst Poster = styled.div`\n  background-image: url(${(props) => props.bg});\n  background-size: cover;\n  background-position: center center;\n  width: 25%;\n  height: 60%;\n  background-color: transparent;\n`;\n\nconst Title = styled.h1`\n  font-size: 65px;\n  margin-bottom: 15px;\n`;\nconst Subtitle = styled.h4`\n  font-size: 35px;\n  margin-bottom: 10px;\n`;\nconst Description = styled.p`\n  font-size: 28px;\n`;\n\nexport default () => {\n  const { id } = useParams();\n  const { loading, data } = useQuery(GET_MOVIE, {\n    variables: { id },\n  });\n  return (\n    <Container>\n      <Column>\n        <Title>{loading ? \"Загрузка...\" : data?.movie?.title}</Title>\n        <Subtitle>\n          {data?.movie?.language} · {data?.movie?.rating}\n        </Subtitle>\n        <Description>{data?.movie?.description_intro}</Description>\n      </Column>\n      <Poster bg={data?.movie?.medium_cover_image}></Poster>\n    </Container>\n  );\n};\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 380px;\n  width: 100%;\n  border-radius: 7px;\n  overflow: hidden;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n`;\nconst Poster = styled.div`\n  background-image: url(${(props) => props.bg});\n  height: 100%;\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n`;\n\nexport default ({ id, bg }) => (\n  <Container>\n    <Link to={`/${id}`}>\n      <Poster bg={bg} />\n    </Link>\n  </Container>\n);\n","import { gql, useQuery } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport Movie from \"../components/Movie\";\n\nconst GET_MOVIES = gql`\n  query {\n    movies {\n      id\n      medium_cover_image\n    }\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Header = styled.header`\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  height: 45vh;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  font-size: 60px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst Subtitle = styled.h3`\n  font-size: 35px;\n`;\n\nconst Loading = styled.div`\n  font-size: 18px;\n  opacity: 0.5;\n  font-weight: 500;\n  margin-top: 10px;\n`;\n\nconst Movies = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 25px;\n  width: 60%;\n  position: relative;\n  top: -50px;\n`;\n\nexport default () => {\n  const { loading, data } = useQuery(GET_MOVIES);\n  return (\n    <Container>\n      <Header>\n        <Title>Apollo 2021</Title>\n        <Subtitle>База фильмов на React, Apollo, GraphQL</Subtitle>\n      </Header>\n      {loading && <Loading>Загрузка...</Loading>}\n      {!loading && data?.movies && (\n        <Movies>\n          {data.movies.map((m) => (\n            <Movie key={m.id} id={m.id} bg={m.medium_cover_image} />\n          ))}\n        </Movies>\n      )}\n    </Container>\n  );\n};\n","import { HashRouter as Router, Route } from \"react-router-dom\";\nimport Details from \"../routes/Details\";\nimport Home from \"../routes/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/:id\" component={Details} />\n    </Router>\n  );\n}\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"https://easycoders-movies.herokuapp.com/\",\n  cache: new InMemoryCache(),\n});\n\nexport default client;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport client from \"./apollo\";\nimport { ApolloProvider } from \"@apollo/client\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}